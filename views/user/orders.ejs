<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile - Dashboard</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">

    <style>
        :root {
            --dark-bg: #2d1b33;
            --accent-pink: #ff69b4;
            --secondary-bg: #3e2c47;
            --text-primary: #ffffff;
            --text-secondary: #ffd1dc;
            --shadow: 0 4px 15px rgba(255, 105, 180, 0.3);
        }

        body {
            background-color: var(--dark-bg);
            color: var(--text-primary);
            font-family: 'Poppins', sans-serif;
            overflow-x: hidden;
            margin: 0;
            padding: 0;
        }

        /* Sidebar */
        .sidebar {
            height: 100vh;
            background: linear-gradient(180deg, var(--secondary-bg), #2d1b33);
            padding: 2rem 1rem;
            position: fixed;
            top: 0;
            left: -280px;
            width: 280px;
            transition: left 0.3s ease-in-out;
            z-index: 1000;
            box-shadow: var(--shadow);
        }

        .sidebar.active {
            left: 0;
        }

        .sidebar h3 {
            color: var(--accent-pink);
            font-size: 1.8rem;
            font-weight: 600;
            text-align: center;
        }

        .sidebar a {
            color: var(--text-primary);
            text-decoration: none;
            padding: 1rem;
            margin: 0.5rem 0;
            border-radius: 10px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 1rem;
            font-size: 1.1rem;
            font-weight: 400;
        }

        .sidebar a:hover,
        .sidebar .active {
            background: rgba(255, 105, 180, 0.2);
            color: var(--accent-pink);
            transform: translateX(5px);
        }

        /* Toggle Button */
        .sidebar-toggle {
            position: fixed;
            top: 1rem;
            left: 1rem;
            z-index: 1100;
            background: var(--accent-pink);
            border: none;
            padding: 0.5rem;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .sidebar.active + .sidebar-toggle {
            left: 300px; /* Moves button to right of sidebar when open */
        }

        .sidebar-toggle:hover {
            background: #ff1493;
            transform: rotate(90deg);
        }

        /* Overlay */
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease;
            z-index: 900;
        }

        .overlay.active {
            opacity: 1;
            visibility: visible;
        }

        /* Main Content */
        .main-content {
            background: #f8f1f5;
            min-height: 100vh;
            transition: margin-left 0.3s ease-in-out;
            margin-left: 0;
        }

        
        .profile-container {
            padding: 2rem;
            background: var(--secondary-bg);
            border-radius: 15px;
            margin: 2rem;
            border: 2px solid var(--accent-pink);
            box-shadow: var(--shadow);
        }

        .user-info-card {
            background: var(--dark-bg);
            padding: 2rem;
            border-radius: 12px;
            border: 2px dashed var(--accent-pink);
        }

        .user-info-card h2 {
            color: var(--accent-pink);
            font-size: 2rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
        }

        .user-info-card p {
            margin: 0.75rem 0;
            font-size: 1.1rem;
            color: var(--text-secondary);
        }

        .profile-image-container img {
            border: 3px solid var(--accent-pink);
            box-shadow: var(--shadow);
        }

        .stats-card {
            background: var(--dark-bg);
            border-radius: 12px;
            padding: 1.5rem;
            text-align: center;
            border: 1px solid var(--accent-pink);
            transition: transform 0.3s ease;
        }

        .stats-card:hover {
            transform: scale(1.03);
        }

        .stats-card h5 {
            color: var(--accent-pink);
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }

        .stats-card p {
            color: var(--text-secondary);
            font-size: 1rem;
        }

        .col-12-b {
    flex: 1 0 auto;
    width: auto;
}

/* Add these styles to the existing <style> section in the head */
    #addressForm {
    background-color: var(--dark-bg);
    border-radius: 12px;
    padding: 2rem;
    border: 2px dashed var(--accent-pink) !important;
}

#addressForm .form-group label {
    color: var(--text-secondary);
    margin-bottom: 0.5rem;
    font-weight: 600;
}

#addressForm .form-control {
    background-color: var(--secondary-bg);
    border: 2px solid var(--accent-pink) !important;
    color: var(--text-primary);
    transition: all 0.3s ease;
}

#addressForm .form-control:focus {
    background-color: var(--secondary-bg);
    border-color: var(--accent-pink) !important;
    box-shadow: 0 0 10px rgba(255, 105, 180, 0.2);
    color: var(--text-primary);
}

#submitButton {
    background-color: var(--accent-pink);
    border: none;
    color: var(--dark-bg);
    font-weight: 600;
    padding: 0.75rem 1.5rem;
    border-radius: 10px;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 1px;
}

#submitButton:hover {
    background-color: #ff1493;
    transform: translateY(-3px);
    box-shadow: 0 4px 15px rgba(255, 105, 180, 0.3);
}

#addressForm h3 {
    color: var(--accent-pink) !important;
    margin-bottom: 1.5rem;
    text-align: center;
    font-weight: 600;
}

/* Error message styling */
.text-danger {
    color: #ff4136 !important;
    font-size: 0.875rem;
    margin-top: 0.25rem;
}

        /* Responsive Design */
        @media (min-width: 768px) {
            .sidebar {
                position: fixed;
                left: 0;
            }
            .sidebar-toggle {
                display: none;
            }
            .overlay {
                display: none;
            }
            .main-content {
                margin-left: 280px;
            }
            .sidebar.active ~ .main-content {
                margin-left: 280px; /* Keeps consistent on desktop */
            }
        }

        @media (max-width: 767px) {
            .profile-container {
                padding: 1rem;
                margin: 1rem;
            }
            .main-content {
                padding-top: 60px;
            }
        }
    </style>
</head>
<body>
    <button class="sidebar-toggle" aria-label="Toggle sidebar">
        <i class="fas fa-bars" style="color: var(--dark-bg);"></i>
    </button>

    <div class="overlay"></div>

    <div class="container-fluid p-0">
        <div class="row m-0">
            <!-- Sidebar -->
            <nav class="sidebar">
           
                <a href="/dashboard" ><i class="fas fa-user"></i> Profile</a>
                <a href="/wishlist"><i class="fas fa-heart"></i> Wishlist</a>
                <a href="/cart"><i class="fa-solid fa-cart-plus"></i> Cart</a>
                <a href="/checkout"><i class="fa-solid fa-credit-card"></i> Checkout</a>
                <a href="/orders" class="active"><i class="fas fa-shopping-cart"></i> Orders</a>
                <a href="/editProfile"><i class="fas fa-cog"></i> Edit profile</a>
                <a href="/address"><i class="fa-solid fa-location-dot"></i> Address</a>
    
                <a href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
            </nav>
            <!-- Main Content -->
            <main class="col-12 main-content px-md-4 py-4 col-12-b">
                <div class="profile-container">
                    <!-- User Info -->
                   

                    <!-- Quick Actions -->
                    <div class="container mt-4">
                        <h3 class="mt-3" style="color: #ff69b4; margin-bottom:70px">Your Orders</h3>
                        <div class="mb-4">
                            <input type="text" id="searchOrder" class="form-control" placeholder="Search for orders...">
                        </div>
                        <body>
                            
                            <div class="col-md-9"> 
                                <% if (orders && orders.length > 0) { %>
                                    <% orders.forEach(order => { %>
                                        <div class="order-card">
                                            <div class="order-header">
                                                <div class="row align-items-center">
                                                    <div class="col-md-2">
                                                        <small class="text-muted">ORDER PLACED</small><br>
                                                        <%= new Date(order.createdOn).toLocaleDateString() %>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <small class="text-muted">TOTAL</small><br>
                                                        ₹<%= Math.round(order.finalAmount) %>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <small class="text-muted">ORDER ID</small><br>
                                                        #<%= order.orderId %>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <small class="text-muted">ORDER STATUS</small><br>
                                                        <span class="status-badge <%= 
                                                            order.status === 'delivered' ? 'bg-success' :
                                                            order.status === 'cancelled' ? 'bg-danger' :
                                                            order.status === 'shipped' ? 'bg-info' :
                                                            'bg-warning'
                                                        %>">
                                                            <%= order.status.toUpperCase() %>
                                                               
                                                        </span>
                                                        <%if(order.status === 'delivered'){%>
                                                            On
                                                            <%=new Date(order.deliveredOn).toLocaleDateString()%>
                                                        <%}%> 
                                                        <%if(order.status === 'returned'){%>
                                                            On
                                                            <%=new Date(order.updatedOn).toLocaleDateString()%>
                                                        <%}%>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <small class="text-muted">PAYMENT METHOD</small><br>
                                                        <% if (order.paymentMethod === 'cod') { %>
                                                            CASH ON DELIVERY
                                                        <% } else if (order.paymentMethod === 'online') { %>
                                                            ONLINE PAYMENT
                                                        <% } else if (order.paymentMethod === 'wallet') { %>
                                                            WALLET PAYMENT
                                                        <% } else { %>
                                                            UNKNOWN PAYMENT METHOD
                                                        <% } %>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="order-body">
                                                <div class="row align-items-center">
                                                    <div class="col-md-2">
                                                        <img src="<%= order.orderedItems[0].productImages[0] %>" 
                                                             alt="<%= order.orderedItems[0].productName %>"
                                                             class="product-image">
                                                    </div>
                                                    <div class="col-md-6">
                                                        <a href="/productDetails?id=<%= order.orderedItems[0].product %>">
                                                            <h5><%= order.orderedItems[0].productName %></h5>
                                                        </a>
                                                        <p class="text-muted mb-0">Quantity: <%= order.orderedItems[0].quantity %></p>
                                                        <p class="text-muted">Price: ₹<%= order.totalPrice/order.orderedItems[0].quantity %></p>
                                                    </div>
                                                    
                                                    <div class="col-md-4 text-end">
                                                        <a href="/order-details?orderId=<%= order.orderId %>" 
                                                           class="btn btn-outline-primary btn-sm">View Details</a>
                                                        
                                                        <% if (order.status === 'delivered' && !order.returnReason && order.requestStatus !== "rejected") { %>
                                                            <button onclick="initiateReturn('<%= order._id %>')" 
                                                                    class="btn btn-warning btn-sm mt-2">
                                                                Request Return
                                                            </button>
                                                        <% } else if (order.status === 'return_requested' && order.requestStatus === 'pending') { %>
                                                            <button onclick="cancelReturn('<%= order._id %>')"
                                                                    class="btn btn-danger btn-sm mt-2">
                                                                Cancel Return Request
                                                            </button>
                                                        <% } else if (!['delivered', 'cancelled', 'return_requested', 'returning', 'returned'].includes(order.status)) { %>
                                                            <button onclick="cancelOrder('<%= order._id %>')"
                                                                    class="btn btn-outline-danger btn-sm mt-2">
                                                                Cancel Order
                                                            </button>
                                                        <% } %>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                <% } else { %>
                                    <div class="text-center py-5">
                                        <div class="mb-4">
                                            <i class="fas fa-shopping-bag fa-3x text-muted"></i>
                                        </div>
                                        <h3>No orders yet</h3>
                                        <p class="text-muted">When you place an order, it will appear here.</p>
                                        <a href="/shop" class="btn btn-primary mt-3">Start Shopping</a>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Return Modal -->
                    <div class="modal fade" id="returnModal" tabindex="-1">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Return Request</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="returnForm">
                                        <div class="mb-3">
                                            <label class="form-label">Return Reason Category</label>
                                            <select class="form-select" id="returnReason" required>
                                                <option value="">Select a reason</option>
                                                <option value="Wrong size">Wrong size</option>
                                                <option value="Damaged product">Damaged product</option>
                                                <option value="Not as described">Not as described</option>
                                                <option value="Quality issues">Quality issues</option>
                                                <option value="Other">Other</option>
                                            </select>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Detailed Description</label>
                                            <textarea class="form-control" id="returnDescription" rows="3" placeholder="Please provide more details about your return reason..." required></textarea>
                                            <small class="text-muted">Please explain the issue in detail to help us better understand your return request.</small>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Upload Images (Optional)</label>
                                            <input type="file" class="form-control" id="returnImages" multiple accept="image/*">
                                            <small class="text-muted">You can upload up to 3 images</small>
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-primary" onclick="submitReturn()">Submit Return Request</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- SweetAlert2 for dialogs -->
                    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
                    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
                    <script>
                    let currentOrderId = null;
                    
                    function initiateReturn(orderId) {
                        currentOrderId = orderId;
                        const modal = new bootstrap.Modal(document.getElementById('returnModal'));
                        modal.show();
                    }
                    
                    document.getElementById('returnReason').addEventListener('change', function() {
                        const otherReasonDiv = document.getElementById('otherReasonDiv');
                        if (this.value === 'Other') {
                            otherReasonDiv?.classList.remove('d-none');
                        } else {
                            otherReasonDiv?.classList.add('d-none');
                        }
                    });
                    
                    async function submitReturn() {
                        try {
                            const reasonSelect = document.getElementById('returnReason');
                            const returnDescription = document.getElementById('returnDescription');
                            const imagesInput = document.getElementById('returnImages');
                            
                            const returnReason = reasonSelect.value;
                            const description = returnDescription.value;
                    
                            if (!returnReason || !description) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Please select a reason category and provide a detailed description!',
                                });
                                return;
                            }
                    
                            const formData = new FormData();
                            formData.append('orderId', currentOrderId);
                            formData.append('returnReason', returnReason);
                            formData.append('returnDescription', description);
                    
                            const files = imagesInput.files;
                            for (let i = 0; i < Math.min(files.length, 3); i++) {
                                formData.append('images', files[i]);
                            }
                    
                            const response = await fetch('/orders/return', {
                                method: 'POST',
                                body: formData
                            });
                    
                            const data = await response.json();
                            
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success!',
                                    text: 'Return request submitted successfully!',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                throw new Error(data.message);
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: error.message || 'Failed to submit return request',
                            });
                        }
                    }
                    
                    async function cancelReturn(orderId) {
                        try {
                            const result = await Swal.fire({
                                title: 'Cancel Return Request',
                                text: 'Are you sure you want to cancel your return request?',
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#d33',
                                cancelButtonColor: '#3085d6',
                                confirmButtonText: 'Yes, cancel it!'
                            });
                    
                            if (result.isConfirmed) {
                                const response = await fetch('/orders/cancel-return', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({ orderId }),
                                });
                    
                                const data = await response.json();
                                
                                if (data.success) {
                                    await Swal.fire({
                                        icon: 'success',
                                        title: 'Success',
                                        text: 'Return request cancelled successfully',
                                        timer: 1500
                                    });
                                    location.reload();
                                } else {
                                    throw new Error(data.message);
                                }
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            await Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: error.message || 'Failed to cancel return request'
                            });
                        }
                    }
                    
                    async function cancelOrder(orderId) {
                        const { value: reasonOption } = await Swal.fire({
                            title: 'Cancel Order',
                            input: 'select',
                            inputLabel: 'Select a reason for cancellation',
                            inputOptions: {
                                'Ordered by mistake': 'Ordered by mistake',
                                'Found a better price': 'Found a better price',
                                'Delivery took too long': 'Delivery took too long',
                                'Item no longer needed': 'Item no longer needed',
                                'Changed my mind': 'Changed my mind',
                                'Wrong item ordered': 'Wrong item ordered',
                                'Other': 'Other'
                            },
                            showCancelButton: true
                        });
                    
                        if (!reasonOption) return;
                    
                        let finalReason = reasonOption;
                    
                        if (reasonOption === 'Other') {
                            const { value: otherReason } = await Swal.fire({
                                title: 'Cancel Order',
                                input: 'textarea',
                                inputLabel: 'Please provide a reason for cancellation',
                                inputPlaceholder: 'Type your reason here...',
                                showCancelButton: true,
                                inputValidator: (value) => {
                                    if (!value) {
                                        return 'You need to provide a reason!';
                                    }
                                }
                            });
                    
                            if (!otherReason) return;
                            finalReason = otherReason;
                        }
                    
                        try {
                            const response = await fetch('/orders/cancel', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ orderId, reason: finalReason }),
                            });
                    
                            const data = await response.json();
                    
                            if (data.success) {
                                await Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: 'Order cancelled successfully',
                                    timer: 1500
                                });
                                location.reload();
                            } else {
                                throw new Error(data.message);
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            await Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: error.message || 'Failed to cancel order'
                            });
                        }
                    }
                    
                    function confirmLogout(event) {
                        event.preventDefault();
                        Swal.fire({
                            title: "Are you sure?",
                            text: "You will be logged out!",
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#3085d6",
                            cancelButtonColor: "#d33",
                            confirmButtonText: "Yes, Logout"
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = "/logout";
                            }
                        });
                    }
                    </script>
                             <!-- //////////////////////// -->
                        </body>
                        
                     </div>
                  
                     

                   
                </div>
            </main>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Search functionality
        document.getElementById('searchOrder').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const orders = document.querySelectorAll('.order-card');
            orders.forEach(order => {
                const orderId = order.querySelector('.order-card-header h5').innerText.toLowerCase();
                if (orderId.includes(searchTerm)) {
                    order.style.display = '';
                } else {
                    order.style.display = 'none';
                }
            });
        });
    </script>



    
</body>
</html>