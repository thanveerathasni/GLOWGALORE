<style>
  .wishlist-container {
    padding: 2rem;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(245, 245, 245, 0.9));
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    margin: 2rem auto;
    max-width: 1200px;
  }

  .wishlist-container h2 {
    font-size: 2rem;
    font-weight: 600;
    color: #0e6fc9;
    text-align: center;
    margin-bottom: 2rem;
  }
      /*  */
      body, ul, li {
            margin: 0;
            padding: 0;
            list-style: none;
        }

        /* Main Navbar Styles */
        .top-navbar {
          background-color: #246dbc; /* Dark background for contrast */
            padding: 15px 0;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Soft shadow for depth */
        }

        .menu-desktop {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .main-menu {
            display: flex;
            gap: 25px;
            font-family: 'Arial', sans-serif;
        }

        /* Styling the Links */
        .main-menu li a {
            color: #ecf0f1; /* Light text color for contrast */
            text-decoration: none;
            font-size: 16px;
            font-weight: 500;
            transition: all 0.3s ease; /* Smooth transition for hover effect */
            text-transform: uppercase; /* Making the text uppercase for a modern look */
            padding: 8px 15px;
        }

        /* Hover Effect */
        .main-menu li a:hover {
            background-color: #e74c3c; /* Red background on hover */
            color: #fff; /* White text when hovering */
            border-radius: 5px; /* Smooth rounded corners */
            transform: scale(1.05); /* Slightly enlarge the item on hover */
        }

        /* Media Query for Mobile */
        @media (max-width: 768px) {
            .main-menu {
                flex-direction: column; /* Stack the menu items vertically on smaller screens */
                gap: 15px;
            }

            .main-menu li a {
                font-size: 18px;
            }
        }
        /*  */

  .wishlist-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem;
    border-bottom: 1px solid #ddd;
    transition: box-shadow 0.3s ease;
  }

  .wishlist-item:hover {
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .wishlist-item img {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 8px;
    border: 2px solid #6739e6;
  }

  .wishlist-item .details {
    flex-grow: 1;
    margin-left: 1.5rem;
  }

  .wishlist-item .details h5 {
    font-size: 1.2rem;
    color: #333;
    margin: 0;
  }

  .wishlist-item .details p {
    font-size: 1rem;
    color: #666;
    margin: 0.5rem 0 0;
  }

  .btn-add-to-cart {
    padding: 0.8rem 1.5rem;
    font-size: 1rem;
    font-weight: 600;
    background: linear-gradient(90deg, #6bb8ff, #6739e6);
    color: white;
    border: none;
    border-radius: 50px;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .btn-add-to-cart:hover {
    background: linear-gradient(90deg, #5aa7ee, #5628d5);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(103, 57, 230, 0.3);
  }

  .alert-info {
    background: #f5f5f5;
    color: #666;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 1rem;
    text-align: center;
  }

  /* Top Navbar */
.top-navbar {
background-color: #2c3e50;   
         padding: 1rem;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1100; /* Above sidebar */
            box-shadow: var(--shadow);
            display: flex;
            justify-content: center; /* Center align links */
            align-items: center;
        }

        .top-navbar .menu-desktop {
            margin: 0;
            padding: 0;
            list-style: none;
            display: flex;
            align-items: center;
        }

        .top-navbar .main-menu {
            display: flex;
            gap: 2rem; /* Better spacing between links */
        }

        .top-navbar .main-menu li {
            position: relative;
        }

        .top-navbar .main-menu a {
            color: #ffffff;
            text-decoration: none;
            font-size: 1.1rem;
            font-weight: 600;
            text-transform: uppercase; /* Matches homepage */
            padding: 0.5rem 1rem;
            transition: color 0.3s ease;
        }

        .top-navbar .main-menu a:hover {
            color: var(--accent-blue); /* Blue hover like homepage */
        }        
</style>

<!-- nav -->

<nav class="top-navbar">
    <ul class="menu-desktop">
        <ul class="main-menu">
            <li>
                <a href="/">Home</a>
            </li>
            <li>
                <a href="/shop">Shop</a> <!-- Removed HOT label -->
            </li>
            <li>
              <a href="/cart">Cart</a> 
          </li>
        </ul>
    </ul>
</nav>

<section class="bg0 m-t-23 p-b-140" style="padding-top: 80px;">
  <div class="container">
    <div class="wishlist-container">
      <h2 style="color:#2c3e50 ;">Your Wishlist</h2>
      <% if (wishlist && wishlist.length > 0) { %>
        <% wishlist.forEach(product => { %>
          <div class="wishlist-item">
            <img src="<%= product.productImage[0] %>" alt="<%= product.productName %>">
            <div class="details">
              <h5><%= product.productName %></h5>
              <p>Price: â‚¹<%= product.salePrice.toFixed(2) %></p>
            </div>
            <div>
              <button class="btn-add-to-cart" onclick="addToCart('<%= product._id %>')">Add to Cart</button>
              <button class="btn-add-to-cart" onclick="removeFromWishlist('<%= product._id %>')" style="background: linear-gradient(90deg, #ff6b6b, #e63946); margin-left: 1rem;">Remove</button>
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <div class="alert alert-info">
         <h3> Your wishlist is empty. Add some products from the <a href="/shop">shop!</a></h3>
        </div>
      <% } %>
    </div>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  async function addToCart(productId) {
    try {
      const response = await fetch('/cart/add-from-wishlist', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId })
      });
      const result = await response.json();

      if (result.status) {
        Swal.fire({
          icon: 'success',
          title: 'Added to Cart',
          text: 'All wishlist items have been moved to your cart!',
          confirmButtonColor: '#6739e6'
        }).then(() => {
          window.location.reload(); // Refresh to show empty wishlist
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: result.message || 'Failed to add to cart',
          confirmButtonColor: '#6739e6'
        });
      }
    } catch (error) {
      console.error('Error adding to cart:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An error occurred while adding to cart',
        confirmButtonColor: '#6739e6'
      });
    }
  }

  async function removeFromWishlist(productId) {
    try {
      const response = await fetch('/wishlist/remove', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId })
      });
      const result = await response.json();

      if (result.status) {
        Swal.fire({
          icon: 'success',
          title: 'Removed from Wishlist',
          text: 'The item has been removed from your wishlist!',
          confirmButtonColor: '#6739e6'
        }).then(() => {
          window.location.reload(); // Refresh to update wishlist
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: result.message || 'Failed to remove from wishlist',
          confirmButtonColor: '#6739e6'
        });
      }
    } catch (error) {
      console.error('Error removing from wishlist:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An error occurred while removing from wishlist',
        confirmButtonColor: '#6739e6'
      });
    }
  }
</script>