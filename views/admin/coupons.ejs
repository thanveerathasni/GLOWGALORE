<%- include("../../views/partials/admin/header") %>
<style>
  /* Grey theme variables for consistency */
  :root {
      --grey-bg: #f1f3f5;
      --grey-text: #343a40;
      --grey-hover: #495057;
  }

  /* Body and font */
  body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: var(--grey-bg);
  }

  /* Content main */
  .content-main {
      padding: 20px;
      max-width: 1200px;
      margin: 0 auto;
  }

  /* Content header */
  .content-header {
      margin-bottom: 20px;
      display: flex;
      justify-content: center;
      align-items: center;
  }

  .content-title {
      font-size: 24px;
      font-weight: 600;
      color: var(--grey-text);
  }

  /* Form styles */
  .col-md-4 {
      max-width: 100%;
      margin: 10px auto;
      padding: 15px;
  }

  .form-group {
      margin-bottom: 15px;
  }

  .form-label {
      font-weight: 500;
      margin-bottom: 5px;
      color: var(--grey-text);
      font-size: 14px;
  }

  .form-control {
      width: 100%;
      padding: 8px;
      border: 1px solid #ced4da;
      border-radius: 4px;
      font-size: 14px;
      box-sizing: border-box;
  }

  .form-control:focus {
      border-color: #007bff;
      outline: none;
      box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
  }

  .error-message {
      color: #dc3545;
      font-size: 12px;
      margin-top: 5px;
  }

  /* Button styles */
  .btn {
      border-radius: 4px;
      font-size: 14px;
      cursor: pointer;
      text-align: center;
      display: inline-block;
      padding: 10px 20px;
  }

  .btn-primary {
      background-color: #007bff;
      color: white;
      border: none;
  }

  .btn-primary:hover {
      background-color: #0056b3;
  }

  .btn-primary.btn-sm {
      padding: 6px 12px;
      font-size: 13px;
  }

  .btn-primary.btn-sm:hover {
      background-color: #0056b3;
  }

  .btn-danger.btn-sm {
      background-color: #dc3545;
      color: white;
      padding: 6px 12px;
      font-size: 13px;
      border: none;
  }

  .btn-danger.btn-sm:hover {
      background-color: #c82333;
  }

  /* Table styles */
  .table-responsive {
      overflow-x: auto;
      max-width: 100%;
      margin: 0 auto;
      padding: 0 10px;
      -webkit-overflow-scrolling: touch;
  }

  .table {
      width: 100%;
      max-width: 100%;
      margin: 0 auto;
      border-collapse: collapse;
      background: #fff;
      border-radius: 8px;
      overflow: hidden;
      font-size: 16px;
  }

  .table-striped tbody tr:nth-child(odd) {
      background-color: #f8f9fa;
  }

  .table th,
  .table td {
      padding: 10px;
      text-align: left;
      vertical-align: middle;
      max-width: 150px;
      word-wrap: break-word;
  }

  .table th {
      background-color: #007bff;
      color: #fff;
      font-weight: 600;
  }

  .table .badge {
      padding: 5px 10px;
      border-radius: 10px;
      font-size: 12px;
      min-width: 60px;
      text-align: center;
  }

  .alert-success {
      background-color: #28a745;
      color: #fff;
  }

  .alert-danger {
      background-color: #dc3545;
      color: #fff;
  }

  /* Responsive adjustments */
  @media (max-width: 767px) {
      .content-main {
          padding: 15px;
      }

      .content-header .content-title {
          font-size: 20px;
      }

      .col-md-4,
      .col-md-8 {
          margin: 10px 0;
          padding: 10px;
      }

      .table {
          font-size: 14px;
      }

      .table th,
      .table td {
          padding: 8px;
          max-width: 120px;
          min-width: 60px;
          font-size: 13px;
      }

      .table .btn-sm {
          font-size: 12px;
          padding: 5px 10px;
          min-width: 60px;
      }

      .table .badge {
          font-size: 11px;
          min-width: 50px;
      }

      .form-control {
          font-size: 13px;
      }

      .form-label {
          font-size: 13px;
      }

      .btn-primary {
          font-size: 13px;
          padding: 8px 16px;
      }
  }

  @media (max-width: 576px) {
      .content-main {
          padding: 10px;
      }

      .content-header .content-title {
          font-size: 18px;
      }

      .table th,
      .table td {
          padding: 6px;
          max-width: 100px;
          min-width: 50px;
          font-size: 12px;
      }

      .table .btn-sm {
          font-size: 11px;
          padding: 4px 8px;
          min-width: 50px;
      }

      .table .badge {
          font-size: 10px;
          min-width: 40px;
      }

      .form-control {
          font-size: 12px;
      }

      .form-label {
          font-size: 12px;
      }

      .btn-primary {
          font-size: 12px;
          padding: 6px 12px;
      }

      .table-responsive {
          padding: 0 5px;
      }

      .col-md-4 {
          padding: 8px;
      }
  }
</style>

<!-- SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.css" />

<section class="content-main">
  <!-- Coupon Section -->
  <div class="content-header row">
    <div class="d-flex justify-content-between align-items-center">
      <h2 class="content-title card-title">Coupons</h2>
    </div>
  </div>
  <div class="row">
    <div class="col-md-4">
      <form id="createCouponForm" method="post" action="/admin/createCoupon">
        <body onload="setDefaultStartDate()"></body>
        <div class="form-group">
          <label for="coupon-name" class="form-label">Coupon Name</label>
          <input
            type="text"
            id="coupon-name"
            name="couponName"
            placeholder="Type here"
            class="form-control"
          />
          <div id="error-coupon-name" class="error-message"></div>
        </div>
        <div class="form-group">
          <label for="startingDate" class="form-label">Start Date</label>
          <input
            type="date"
            name="startDate"
            class="form-control"
            required="true"
            id="startingDate"
          />
          <div id="error-start-date" class="error-message"></div>
        </div>
        <div class="form-group">
          <label for="expiringDate" class="form-label">End Date</label>
          <input
            type="date"
            name="endDate"
            class="form-control"
            id="expiringDate"
            required="true"
          />
          <div id="error-end-date" class="error-message"></div>
        </div>
        <div class="form-group">
          <label for="offer-price" class="form-label">Offer Price</label>
          <input
            type="text"
            name="offerPrice"
            placeholder="Type here"
            class="form-control"
          />
          <div id="error-offer-price" class="error-message"></div>
        </div>
        <div class="form-group">
          <label for="minimum-price" class="form-label">Minimum Price</label>
          <input
            type="text"
            name="minimumPrice"
            placeholder="Type here"
            class="form-control"
          />
          <div id="error-minimum-price" class="error-message"></div>
        </div>
        <div class="form-group">
          <button
            class="btn btn-primary"
            type="submit"
          >
            Add Coupon
          </button>
        </div>
        <div id="err-msg" class="error-message"></div>
      </form>
    </div>
    <div class="col-md-8">
      <table class="table table-striped">
        <thead>
          <tr>
            <th scope="col">Name</th>
            <th scope="col">Created On</th>
            <th scope="col">Expires On</th>
            <th scope="col">Offer Price</th>
            <th scope="col">Minimum Price</th>
            <th scope="col">Status</th>
            <th scope="col">Actions</th>
          </tr>
        </thead>
        <tbody>
          <% for(let i = 0; i < coupons.length; i++) { %>
            <tr>
              <td><%= coupons[i].name %></td>
              <td><%= new Date(coupons[i].createdOn).toLocaleDateString('en-IN') %></td>
              <td><%= new Date(coupons[i].expireOn).toLocaleDateString('en-IN') %></td>
              <td><%= coupons[i].offerPrice %></td>
              <td><%= coupons[i].minimumPrice %></td>
              <td>
                <span class="badge rounded-pill <%= coupons[i].isList ? 'alert-success' : 'alert-danger' %>">
                  <%= coupons[i].isList ? 'Active' : 'Inactive' %>
                </span>
              </td>
              <td>
                <a href="/admin/editCoupon?id=<%= coupons[i]._id %>" class="btn btn-primary btn-sm">Edit</a>
                <a href="#" onclick="confirmDelete('<%= coupons[i]._id %>')" class="btn btn-danger btn-sm">Delete</a>
              </td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>
</section>

<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.js"></script>
<!-- jQuery (required for deleteCoupon AJAX) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
  // Success/error message handling
  document.addEventListener('DOMContentLoaded', function () {
    const successMessage = '<%= typeof successMessage !== "undefined" ? successMessage : "" %>';
    const errorMessage = '<%= typeof errorMessage !== "undefined" ? errorMessage : "" %>';

    if (successMessage) {
      Swal.fire({
        title: 'Success!',
        text: successMessage,
        icon: 'success',
        confirmButtonText: 'OK',
        confirmButtonColor: '#007bff'
      });
    }

    if (errorMessage) {
      Swal.fire({
        title: 'Error',
        text: decodeURIComponent(errorMessage),
        icon: 'error',
        confirmButtonColor: '#dc3545'
      });
    }
  });

  function validateForm(event) {
    event.preventDefault(); // Prevent form submission until validation
    document.querySelectorAll(".error-message").forEach((element) => (element.innerHTML = ""));

    // Get form values
    const name = document.getElementsByName("couponName")[0].value.trim();
    const sDate = document.getElementsByName("startDate")[0].value;
    const eDate = document.getElementsByName("endDate")[0].value;
    const offerPrice = document.getElementsByName("offerPrice")[0].value.trim();
    const minimumPrice = document.getElementsByName("minimumPrice")[0].value.trim();

    let isValid = true;
    let errorMessages = [];

    // Coupon Name: 1-50 chars, alphanumeric
    const nameRegex = /^[A-Za-z0-9]{1,50}$/;
    if (!name) {
      document.getElementById("error-coupon-name").innerHTML = "Coupon name is required";
      errorMessages.push("Coupon name is required");
      isValid = false;
    } else if (!nameRegex.test(name)) {
      document.getElementById("error-coupon-name").innerHTML = "Coupon name must be 1-50 alphanumeric characters";
      errorMessages.push("Coupon name must be 1-50 alphanumeric characters");
      isValid = false;
    }

    // Start Date: Required, >= today
    if (!sDate) {
      document.getElementById("error-start-date").innerHTML = "Start date is required";
      errorMessages.push("Start date is required");
      isValid = false;
    } else {
      const sDateObj = new Date(sDate);
      const todayDateObj = new Date();
      todayDateObj.setHours(0, 0, 0, 0);
      if (sDateObj < todayDateObj) {
        document.getElementById("error-start-date").innerHTML = "Start date must be today or later";
        errorMessages.push("Start date must be today or later");
        isValid = false;
      }
    }

    // End Date: Required, > start date
    if (!eDate) {
      document.getElementById("error-end-date").innerHTML = "End date is required";
      errorMessages.push("End date is required");
      isValid = false;
    } else {
      const sDateObj = new Date(sDate);
      const eDateObj = new Date(eDate);
      if (sDate && eDate && sDateObj >= eDateObj) {
        document.getElementById("error-end-date").innerHTML = "End date must be after start date";
        errorMessages.push("End date must be after start date");
        isValid = false;
      }
    }

    // Offer Price: Required, numeric, >10, < minimumPrice
    if (!offerPrice) {
      document.getElementById("error-offer-price").innerHTML = "Offer price is required";
      errorMessages.push("Offer price is required");
      isValid = false;
    } else if (!/^\d+$/.test(offerPrice)) {
      document.getElementById("error-offer-price").innerHTML = "Offer price must be a positive integer";
      errorMessages.push("Offer price must be a positive integer");
      isValid = false;
    } else {
      const offerPriceNum = parseInt(offerPrice);
      if (offerPriceNum <= 10) {
        document.getElementById("error-offer-price").innerHTML = "Offer price must be above 10 rupees";
        errorMessages.push("Offer price must be above 10 rupees");
        isValid = false;
      }
    }

    // Minimum Price: Required, numeric, > offerPrice
    if (!minimumPrice) {
      document.getElementById("error-minimum-price").innerHTML = "Minimum price is required";
      errorMessages.push("Minimum price is required");
      isValid = false;
    } else if (!/^\d+$/.test(minimumPrice)) {
      document.getElementById("error-minimum-price").innerHTML = "Minimum price must be a positive integer";
      errorMessages.push("Minimum price must be a positive integer");
      isValid = false;
    } else {
      const offerPriceNum = parseInt(offerPrice);
      const minimumPriceNum = parseInt(minimumPrice);
      if (offerPrice && minimumPrice && !isNaN(offerPriceNum) && !isNaN(minimumPriceNum) && offerPriceNum >= minimumPriceNum) {
        document.getElementById("error-offer-price").innerHTML = "Offer price must be less than minimum price";
        errorMessages.push("Offer price must be less than minimum price");
        isValid = false;
      }
    }

    if (!isValid) {
      Swal.fire({
        icon: 'error',
        title: 'Validation Error',
        text: errorMessages.join(' '),
        confirmButtonColor: '#dc3545'
      });
      return false;
    }

    // Submit form if valid
    document.getElementById("createCouponForm").submit();
    return true;
  }

  function confirmDelete(couponId) {
    Swal.fire({
      title: "Are you sure?",
      text: "You won't be able to revert this!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, delete it!",
    }).then((result) => {
      if (result.isConfirmed) {
        deleteCoupon(couponId);
      }
    });
  }

  function deleteCoupon(couponId) {
    $.ajax({
      url: `/admin/deletecoupon?id=${couponId}`,
      method: "GET",
      success: function () {
        Swal.fire({
          icon: "success",
          title: "Deleted!",
          text: "The coupon has been deleted.",
          confirmButtonText: "OK",
        }).then(() => {
          window.location.reload();
        });
      },
      error: function () {
        Swal.fire({
          icon: "error",
          title: "Error!",
          text: "Failed to delete the coupon. Please try again.",
        });
      },
    });
  }

  function setDefaultStartDate() {
    const today = new Date();
    const year = today.getFullYear();
    let month = (today.getMonth() + 1).toString().padStart(2, "0");
    let day = today.getDate().toString().padStart(2, "0");
    document.getElementById("startingDate").value = `${year}-${month}-${day}`;
  }
</script>

<%- include("../../views/partials/admin/footer") %>